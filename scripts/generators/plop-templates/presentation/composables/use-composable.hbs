import type { Create{{pascalCase resource}}Dto } from '@{{feature}}/domain/dtos/{{resource}}/create-{{resource}}.dto';
import type { Update{{pascalCase resource}}Dto } from '@{{feature}}/domain/dtos/{{resource}}/update-{{resource}}.dto';
import actions from '@{{feature}}/infrastructure/actions/{{resource}}';
import { use{{pascalCase resource}}Store } from '@{{feature}}/presentation/store/{{resource}}/{{resource}}.store';

export function use{{pascalCase resource}}() {
  const store = use{{pascalCase resource}}Store()

  async function load{{pascalCase resource}}s() {
    store.setLoading(true);
    const items = await actions.list{{pascalCase resource}}s();
    store.set{{pascalCase resource}}s(items);
    store.setLoading(false);
  }

  async function get{{pascalCase resource}}(id: string) {
    const item = await actions.get{{pascalCase resource}}(id);
    store.set{{pascalCase resource}}(item);
  }

  async function add{{pascalCase resource}}(input: Create{{pascalCase resource}}Dto) {
    const item = await actions.create{{pascalCase resource}}(input);
    store.add{{pascalCase resource}}ToList(item);
  }

  async function edit{{pascalCase resource}}(input: Update{{pascalCase resource}}Dto) {
    const updated = await actions.update{{pascalCase resource}}(input);
    store.update{{pascalCase resource}}InList(updated);
  }

  async function remove{{pascalCase resource}}(id: string) {
    await actions.delete{{pascalCase resource}}(id);
    store.remove{{pascalCase resource}}FromList(id);
  }

  return {
    load{{pascalCase resource}}s,
    get{{pascalCase resource}},
    add{{pascalCase resource}},
    edit{{pascalCase resource}},
    remove{{pascalCase resource}},
  };
}
